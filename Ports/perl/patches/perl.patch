diff --git a/Makefile b/Makefile
index c5253a0..9b0782c 100644
--- a/Makefile
+++ b/Makefile
@@ -298,7 +298,7 @@ dist/Unicode-Normalize/Makefile: lib/unicore/CombiningClass.pl
 pod/perluniprops.pod: lib/unicore/CombiningClass.pl
 
 lib/unicore/CombiningClass.pl: $(CONFIGPM)
-	./miniperl_top lib/unicore/mktables -w -C lib/unicore -P pod -maketest -makelist -p
+	./miniperl_top lib/unicore/mktables -w -C lib/unicore -P pod -makelist -p
 
 # The following rules ensure that modules listed in mkppport.lst get
 # their ppport.h installed.
diff --git a/cflags.SH b/cflags.SH
index 96bfcd9..3f74c03 100755
--- a/cflags.SH
+++ b/cflags.SH
@@ -409,6 +409,8 @@ esac
 ;;
 esac
 
+warn=''
+
 echo "cflags.SH: cc       = $cc"
 echo "cflags.SH: ccflags  = $ccflags"
 echo "cflags.SH: stdflags = $stdflags"
diff --git a/cnf/configure_func.sh b/cnf/configure_func.sh
index e2515bf..543631d 100644
--- a/cnf/configure_func.sh
+++ b/cnf/configure_func.sh
@@ -53,7 +53,7 @@ checkfunc d_dirfd 'dirfd'
 checkfunc d_dladdr 'dladdr' 'NULL, NULL' 'dlfcn.h'
 checkfunc d_dlerror 'dlerror'
 checkfunc d_dlopen 'dlopen'
-checkfunc d_drand48 'drand48'
+# checkfunc d_drand48 'drand48'
 checkfunc d_dup2 'dup2' "0,0" 'unistd.h'
 checkfunc d_dup3 'dup3' "0,0,0" 'fcntl.h unistd.h'
 checkfunc d_duplocale 'duplocale' '0' 'locale.h'
diff --git a/cnf/configure_func_sel.sh b/cnf/configure_func_sel.sh
index f48294f..4c93f3c 100644
--- a/cnf/configure_func_sel.sh
+++ b/cnf/configure_func_sel.sh
@@ -53,13 +53,7 @@ fi
 
 mstart "Looking for a random number function"
 log "d_drand=$d_drand48 d_random=$d_random d_rand=$d_rand"
-if [ "$d_drand48" = 'define' ]; then
-	define randfunc 'drand48'
-	define seedfunc 'srand48'
-	define randbits 48
-	define randseedtype 'long'
-	result 'good, found drand48()'
-elif [ "$d_random" = 'define' ]; then
+if [ "$d_random" = 'define' ]; then
 	define randfunc 'random'
 	define seedfunc 'srandom'
 	define randbits 31
diff --git a/cnf/configure_misc.sh b/cnf/configure_misc.sh
index f18e41b..2fc2b3e 100644
--- a/cnf/configure_misc.sh
+++ b/cnf/configure_misc.sh
@@ -109,7 +109,7 @@ define spitshell 'cat'
 define d_Gconvert 'sprintf((b),"%.*g",(n),(x))'
 define d_modfl_pow32_bug 'undef'
 define direntrytype 'struct dirent'
-define drand01 'drand48()'
+define drand01 'random()'
 define fflushNULL 'define'
 define fflushall 'undef'
 define freetype 'void'
diff --git a/cpan/Socket/Socket.xs b/cpan/Socket/Socket.xs
index e46c93e..eddefc8 100644
--- a/cpan/Socket/Socket.xs
+++ b/cpan/Socket/Socket.xs
@@ -111,9 +111,11 @@ static int inet_pton(int af, const char *src, void *dst)
     case AF_INET:
       *(struct in_addr *)dst = ((struct sockaddr_in *)&ss)->sin_addr;
       return 1;
+#ifdef AF_INET6
     case AF_INET6:
       *(struct in6_addr *)dst = ((struct sockaddr_in6 *)&ss)->sin6_addr;
       return 1;
+#endif
     default:
       WSASetLastError(WSAEAFNOSUPPORT);
       return -1;
@@ -132,9 +134,11 @@ static const char *inet_ntop(int af, const void *src, char *dst, socklen_t size)
     case AF_INET:
       ((struct sockaddr_in *)&ss)->sin_addr = *(struct in_addr *)src;
       break;
+#ifdef AF_INET6
     case AF_INET6:
       ((struct sockaddr_in6 *)&ss)->sin6_addr = *(struct in6_addr *)src;
       break;
+#endif
     default:
       return NULL;
   }
@@ -150,6 +154,8 @@ static const char *inet_ntop(int af, const void *src, char *dst, socklen_t size)
 #define HAS_INETNTOP
 #endif
 
+#define INET6_ADDRSTRLEN 65
+
 #ifdef NETWARE
 NETDB_DEFINE_CONTEXT
 NETINET_DEFINE_CONTEXT
diff --git a/ext/POSIX/POSIX.xs b/ext/POSIX/POSIX.xs
index 77bb829..3de1295 100644
--- a/ext/POSIX/POSIX.xs
+++ b/ext/POSIX/POSIX.xs
@@ -3821,9 +3821,7 @@ ctermid(s = 0)
 	char *          s = 0;
     CODE:
 #ifdef I_TERMIOS
-        /* On some systems L_ctermid is a #define; but not all; this code works
-         * for all cases (so far...) */
-	s = (char *) safemalloc((size_t) L_ctermid);
+	s = (char *) safemalloc((size_t) 9);
 #endif
 	RETVAL = ctermid(s);
     OUTPUT:
